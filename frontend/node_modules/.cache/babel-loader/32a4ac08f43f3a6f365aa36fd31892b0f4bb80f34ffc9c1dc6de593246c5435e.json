{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Proyect\\\\React\\\\frontend\\\\src\\\\Context\\\\Context.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nimport { useConnection } from \"./connection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/React.createContext();\nfunction TaskProvide(props) {\n  _s();\n  const {\n    data,\n    saveTasks: saveTasks,\n    loading,\n    error\n  } = useConnection();\n\n  //old localStorage\n\n  /*\r\n  const {\r\n      item: tasks,\r\n      saveTasks:saveTasks,\r\n      loading,\r\n      error\r\n  } = useLocalStorage('TODOS_V1',[]);\r\n   */\n  const [search, setSearchValue] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false);\n  const completedTasks = tasks.filter(item => item.completed).length;\n  const totalTasks = tasks.length;\n  let searchedTasks = [];\n  if (!search.length >= 1) {\n    searchedTasks = tasks;\n  } else {\n    searchedTasks = tasks.filter(item => {\n      const CorLetterMi = item.text.toLowerCase();\n      const LetterMinState = search.toLowerCase();\n      return CorLetterMi.includes(LetterMinState);\n    });\n  }\n\n  //Complete\n  const CompleteTask = text => {\n    const taskIndex = tasks.findIndex(item => item.text === text);\n    const newArrayTasks = [...tasks];\n    newArrayTasks[taskIndex].completed = true;\n    saveTasks(newArrayTasks);\n  };\n  //Delete \n  const DeleteTask = text => {\n    const taskIndex = tasks.findIndex(item => item.text === text);\n    const newArrayTasks = [...tasks];\n    newArrayTasks.splice(taskIndex, 1);\n    saveTasks(newArrayTasks);\n  };\n  //Add\n  const AddTask = text => {\n    const newATasks = {\n      text,\n      completed: false\n    };\n    saveTasks(newATasks);\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      loading,\n      error,\n      totalTasks,\n      completedTasks,\n      search,\n      setSearchValue,\n      searchedTasks,\n      CompleteTask,\n      DeleteTask,\n      AddTask,\n      openModal,\n      setOpenModal\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n}\n_s(TaskProvide, \"oK7H4lsdazPBAVXnHkGKm8Tn6rg=\", false, function () {\n  return [useConnection];\n});\n_c = TaskProvide;\nexport { TaskContext, TaskProvide };\nvar _c;\n$RefreshReg$(_c, \"TaskProvide\");","map":{"version":3,"names":["React","useLocalStorage","useConnection","jsxDEV","_jsxDEV","TaskContext","createContext","TaskProvide","props","_s","data","saveTasks","loading","error","search","setSearchValue","useState","openModal","setOpenModal","completedTasks","tasks","filter","item","completed","length","totalTasks","searchedTasks","CorLetterMi","text","toLowerCase","LetterMinState","includes","CompleteTask","taskIndex","findIndex","newArrayTasks","DeleteTask","splice","AddTask","newATasks","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/Proyect/React/frontend/src/Context/Context.js"],"sourcesContent":["import React from \"react\";\r\nimport {useLocalStorage} from \"./useLocalStorage\";\r\nimport {useConnection} from \"./connection\";\r\n\r\nconst TaskContext = React.createContext();\r\n \r\n function TaskProvide(props){\r\n     \r\n     const {\r\n         data,\r\n         saveTasks:saveTasks,\r\n         loading,\r\n         error\r\n     } = useConnection();\r\n     \r\n     \r\n     //old localStorage\r\n     \r\n     \r\n     /*\r\n     const {\r\n         item: tasks,\r\n         saveTasks:saveTasks,\r\n         loading,\r\n         error\r\n     } = useLocalStorage('TODOS_V1',[]);\r\n      */\r\n     const [search, setSearchValue] = React.useState('');\r\n     const [openModal,setOpenModal] = React.useState(false );\r\n     const completedTasks = tasks.filter(item => item.completed).length;\r\n     const totalTasks = tasks.length;\r\n\r\n     let searchedTasks = [];\r\n\r\n     if (!search.length >= 1){\r\n         searchedTasks = tasks;\r\n     }else{\r\n         searchedTasks = tasks.filter(item => {\r\n             const CorLetterMi = item.text.toLowerCase();\r\n             const LetterMinState = search.toLowerCase();\r\n             return CorLetterMi.includes(LetterMinState);\r\n         })\r\n     }\r\n\r\n\r\n     //Complete\r\n     const CompleteTask = (text)=>{\r\n         const taskIndex = tasks.findIndex(item => item.text === text);\r\n         const newArrayTasks = [...tasks];\r\n         newArrayTasks[taskIndex].completed = true;\r\n         saveTasks(newArrayTasks);\r\n     }\r\n     //Delete \r\n     const DeleteTask = (text)=>{\r\n         const taskIndex = tasks.findIndex(item => item.text === text);\r\n         const newArrayTasks = [...tasks];\r\n         newArrayTasks.splice(taskIndex,1);\r\n         saveTasks(newArrayTasks);\r\n     }\r\n     //Add\r\n     const AddTask = (text)=>{\r\n         const newATasks = {\r\n            \r\n             text,\r\n             completed:false\r\n            \r\n         }\r\n         saveTasks(newATasks);\r\n     }\r\n     \r\n     \r\n     return(\r\n         <TaskContext.Provider value={{\r\n             loading,\r\n             error,\r\n             totalTasks,\r\n             completedTasks,\r\n             search,\r\n             setSearchValue,\r\n             searchedTasks,\r\n             CompleteTask,\r\n             DeleteTask,\r\n             AddTask,\r\n             openModal,\r\n             setOpenModal,\r\n             \r\n         }}>\r\n             {props.children}\r\n         </TaskContext.Provider>\r\n     );\r\n }\r\n \r\nexport {TaskContext,TaskProvide};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,eAAe,QAAO,mBAAmB;AACjD,SAAQC,aAAa,QAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAa,EAAE;AAExC,SAASC,WAAWA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAEvB,MAAM;IACFC,IAAI;IACJC,SAAS,EAACA,SAAS;IACnBC,OAAO;IACPC;EACJ,CAAC,GAAGX,aAAa,EAAE;;EAGnB;;EAGA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;EACK,MAAM,CAACY,MAAM,EAAEC,cAAc,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGlB,KAAK,CAACgB,QAAQ,CAAC,KAAK,CAAE;EACvD,MAAMG,cAAc,GAAGC,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC,CAACC,MAAM;EAClE,MAAMC,UAAU,GAAGL,KAAK,CAACI,MAAM;EAE/B,IAAIE,aAAa,GAAG,EAAE;EAEtB,IAAI,CAACZ,MAAM,CAACU,MAAM,IAAI,CAAC,EAAC;IACpBE,aAAa,GAAGN,KAAK;EACzB,CAAC,MAAI;IACDM,aAAa,GAAGN,KAAK,CAACC,MAAM,CAACC,IAAI,IAAI;MACjC,MAAMK,WAAW,GAAGL,IAAI,CAACM,IAAI,CAACC,WAAW,EAAE;MAC3C,MAAMC,cAAc,GAAGhB,MAAM,CAACe,WAAW,EAAE;MAC3C,OAAOF,WAAW,CAACI,QAAQ,CAACD,cAAc,CAAC;IAC/C,CAAC,CAAC;EACN;;EAGA;EACA,MAAME,YAAY,GAAIJ,IAAI,IAAG;IACzB,MAAMK,SAAS,GAAGb,KAAK,CAACc,SAAS,CAACZ,IAAI,IAAIA,IAAI,CAACM,IAAI,KAAKA,IAAI,CAAC;IAC7D,MAAMO,aAAa,GAAG,CAAC,GAAGf,KAAK,CAAC;IAChCe,aAAa,CAACF,SAAS,CAAC,CAACV,SAAS,GAAG,IAAI;IACzCZ,SAAS,CAACwB,aAAa,CAAC;EAC5B,CAAC;EACD;EACA,MAAMC,UAAU,GAAIR,IAAI,IAAG;IACvB,MAAMK,SAAS,GAAGb,KAAK,CAACc,SAAS,CAACZ,IAAI,IAAIA,IAAI,CAACM,IAAI,KAAKA,IAAI,CAAC;IAC7D,MAAMO,aAAa,GAAG,CAAC,GAAGf,KAAK,CAAC;IAChCe,aAAa,CAACE,MAAM,CAACJ,SAAS,EAAC,CAAC,CAAC;IACjCtB,SAAS,CAACwB,aAAa,CAAC;EAC5B,CAAC;EACD;EACA,MAAMG,OAAO,GAAIV,IAAI,IAAG;IACpB,MAAMW,SAAS,GAAG;MAEdX,IAAI;MACJL,SAAS,EAAC;IAEd,CAAC;IACDZ,SAAS,CAAC4B,SAAS,CAAC;EACxB,CAAC;EAGD,oBACInC,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACC,KAAK,EAAE;MACzB7B,OAAO;MACPC,KAAK;MACLY,UAAU;MACVN,cAAc;MACdL,MAAM;MACNC,cAAc;MACdW,aAAa;MACbM,YAAY;MACZI,UAAU;MACVE,OAAO;MACPrB,SAAS;MACTC;IAEJ,CAAE;IAAAwB,QAAA,EACGlC,KAAK,CAACkC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAE/B;AAACrC,EAAA,CApFQF,WAAW;EAAA,QAOZL,aAAa;AAAA;AAAA6C,EAAA,GAPZxC,WAAW;AAsFrB,SAAQF,WAAW,EAACE,WAAW;AAAE,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}